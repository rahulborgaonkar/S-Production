<apex:page controller="dsfs.DocuSignSetupDemoController"
	action="{!initConfiguration}" tabstyle="DocuSign_Admin__tab">
	<style>
.ds_button_wrapper {
	padding: 10px;
	layout: block;
	text-align: left;
}

.ds_setuptext {
	padding: 10px;
	text-align: left;
}
</style>
	<apex:form >
		<input type="hidden" id="hdnIpRangeUrl" name="hdnIpRangeUrl"
			value="{!SetupIpRangeUrl}" />
		<script>
function SetTrustedNetwork()
{
    var url = document.getElementById("hdnIpRangeUrl").value;
    url = unescape(url);
    window.open(url, "SFNetworkAddress", "height=600, width=950,scrollbars=1,resizable=1");
}
</script>
		<apex:pageMessages />
		<!-- START MESSAGE -->
		<apex:pageBlock title="Configuring DocuSign For Salesforce Demo"
			tabstyle="DocuSign_Admin__tab">
    Configuring DocuSign for Salesforce Demo is an easy process.  
    If you are interrupted during the set up process, go back to the DocuSign Admin Tab to continue.    
    There are two steps to configuring your demo system:
    <br />
			<br />
			<table>
				<tr>
					<td style="padding-top: 20px"><font style="font-weight: bold">Step
							1:&nbsp;&nbsp;Link Your DocuSign Account</font></td>
					<td style="padding-top: 20px"><apex:commandButton action="{!RequestAccount}" value="Link Account"
							rendered="{!IsAccountConfigured==false}" /> <apex:outputLabel rendered="{!IsAccountConfigured}">DocuSign Account Configured.</apex:outputLabel>
					</td>
				</tr>
				<tr>
					<td style="padding-top: 20px"><font style="font-weight: bold">Step
							2:&nbsp;&nbsp;Enable DocuSign to Salesforce</font></td>
					<td style="padding-top: 20px"><apex:outputLabel rendered="{!ConnectCredentialsEditable == false}">DocuSign to Salesforce complete.</apex:outputLabel>
						<apex:outputPanel rendered="{!ConnectCredentialsEditable}">
							<table cellpadding="0" cellspacing="0" border="0">
								<tr>
									<td align="center" style="white-space: nowrap;" valign="bottom">
										<input type="button" class="btn" onclick="SetTrustedNetwork()"
										id="btnTrustedNetwork"
										value="Add DocuSign as a Trusted Network" /> <br />(close
										pop-up after complete)</td>
									<td style="padding-left: 10px; padding-right: 10px"
										valign="top"><apex:outputText >Or</apex:outputText></td>
									<td style="white-space: nowrap;" valign="top">Salesforce
										Token&nbsp;<apex:inputSecret value="{!ConnectSecurityToken}"
											id="connectSecurityToken" style="width: 200px;" /></td>
								</tr>
							</table>
						</apex:outputPanel></td>
				</tr>
				<tr>
					<td style="white-space: nowrap;" align="right"><apex:outputLabel value="Salesforce User" rendered="{!ConnectCredentialsEditable}" />
					</td>
					<td style="white-space: nowrap;"><apex:inputField style="width: 200px;"
							value="{!dummyRecordForUserLookup.dsfs__LookupUser__c}"
							id="connectUsernameEdit" rendered="{!ConnectCredentialsEditable}" />
					</td>
				</tr>
				<tr>
					<td style="white-space: nowrap;" align="right"><apex:outputLabel value="Salesforce Password"
							rendered="{!ConnectCredentialsEditable}" /></td>
					<td style="white-space: nowrap;"><apex:inputSecret value="{!ConnectPassword}" id="connectPasswordEdit"
							style="width: 200px;" rendered="{!ConnectCredentialsEditable}" />
					</td>
				</tr>
				<tr>
					<td style="white-space: nowrap;" align="right"><apex:outputLabel value="Salesforce Environment" for="sfEnv"
							rendered="{!ConnectCredentialsEditable}" />
					</td>
					<td style="white-space: nowrap;"><apex:selectList id="sfEnv"
							value="{!SalesforceEnvironmentForConnect}" multiselect="false"
							size="1" style="width: 200px;"
							rendered="{!ConnectCredentialsEditable}">
							<apex:selectOptions value="{!SalesforceEnvironmentForConnectList}" />
						</apex:selectList> <br /> <apex:commandButton action="{!SaveConnect}"
							id="dsxConnectSave" value="Save"
							rendered="{!ConnectCredentialsEditable}" /> <br /> <apex:outputText value="{!ConnectErrorMessage}" id="connectErrorMessageDisplay"
							style="color: red" rendered="{!ConnectCredentialsEditable}" /></td>
				</tr>
				<tr>
					<td><apex:commandButton action="{!Next}" value="Done" />
					</td>
					<td>&nbsp;</td>
				</tr>
			</table>
		</apex:pageBlock>
	</apex:form>
</apex:page>